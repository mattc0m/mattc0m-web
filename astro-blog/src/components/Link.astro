---
export interface Props {
  href?: string;
  linkColor?: string;
  linkColorHover?: string;
  underlineColor?: string;
  underlineColorHover?: string;
  cssClass?: string;
}
const { href, linkColor = "#4C4F51", linkColorHover, underlineColor = "transparent", underlineColorHover = "#108FE3", cssClass } = Astro.props;

const url = new URL(Astro.props.href, Astro.url)
const isExternal = url.host !== Astro.url.host
const isCurrent = url.href === Astro.url.href
---

  <a
  aria-current={isCurrent ? 'page' : null}
  rel={isExternal ? 'noopener' : null}
  target={isExternal ? '_blank' : null}
  class:list={[ cssClass ]}
  {...Astro.props}
  ><slot /></a>


<style define:vars={{ linkColor, linkColorHover, underlineColor, underlineColorHover }}>

  a {
    color: var(--linkColor);
    text-decoration-thickness: var(--underlineThickness);
    text-decoration-color: var(--underlineColor);
    text-underline-offset: var(--underlineOffset);
    transition: color 0.2s ease-in-out, text-decoration-color 0.4s ease-in-out;

    &:hover {
      color: var(--linkColorHover);
      text-decoration-color: var(--underlineColorHover);
    }
  }

</style>