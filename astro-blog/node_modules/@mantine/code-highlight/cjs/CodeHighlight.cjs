'use client';
'use strict';

var React = require('react');
var cx = require('clsx');
var core = require('@mantine/core');
var useHighlight = require('./use-highlight.cjs');
var CopyIcon = require('./CopyIcon.cjs');
var CodeHighlight_module = require('./CodeHighlight.module.css.cjs');
var CodeHighlight_theme_module = require('./CodeHighlight.theme.module.css.cjs');

const classes = { ...CodeHighlight_module, root: cx(CodeHighlight_module.root, CodeHighlight_theme_module.theme) };
const defaultProps = {
  copyLabel: "Copy code",
  copiedLabel: "Copied",
  language: "tsx",
  withCopyButton: true
};
const CodeHighlight = core.factory((_props, ref) => {
  const props = core.useProps("CodeHighlight", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    children,
    code,
    copiedLabel,
    copyLabel,
    language,
    withCopyButton,
    highlightOnClient,
    ...others
  } = props;
  const getStyles = core.useStyles({
    name: "CodeHighlight",
    props,
    classes,
    className,
    style,
    classNames,
    styles,
    unstyled
  });
  const getCodeProps = useHighlight.useHighlight({
    code,
    language,
    highlightOnClient
  });
  return /* @__PURE__ */ React.createElement(core.Box, { ...getStyles("root"), ref, ...others, dir: "ltr" }, withCopyButton && /* @__PURE__ */ React.createElement(core.CopyButton, { value: code.trim() }, ({ copied, copy }) => /* @__PURE__ */ React.createElement(core.Tooltip, { label: copied ? copiedLabel : copyLabel, fz: "sm", position: "left" }, /* @__PURE__ */ React.createElement(core.ActionIcon, { onClick: copy, variant: "none", ...getStyles("copy") }, /* @__PURE__ */ React.createElement(CopyIcon.CopyIcon, { copied })))), /* @__PURE__ */ React.createElement(core.ScrollArea, { type: "hover", dir: "ltr", offsetScrollbars: false }, /* @__PURE__ */ React.createElement("pre", { ...getStyles("pre") }, /* @__PURE__ */ React.createElement("code", { ...getStyles("code"), ...getCodeProps() }))));
});
CodeHighlight.displayName = "@mantine/core/CodeHighlight";
CodeHighlight.classes = classes;

exports.CodeHighlight = CodeHighlight;
//# sourceMappingURL=CodeHighlight.cjs.map
